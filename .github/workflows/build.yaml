name: Build
on: [ push ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run test
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  e2e:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: cypress-io/github-action@v2
        with:
          start: npm run http-server
      - uses: actions/upload-artifact@v2
        with:
          name: e2e-videos
          path: cypress/videos
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - e2e
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

