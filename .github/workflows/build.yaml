name: Build

on:
  push:
    branches:
      - master
  pull_request: {}

env:
  REGISTRY: registry.cloudscale-lpg-2.appuio.cloud
  NAMESPACE:  appuio-cloud-preview
  IMAGE_NAME: appuio-cloud-preview/cloud-portal
  IMG_TAG_PREVIEW: pr-${{ github.event.number }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  e2e:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: cypress-io/github-action@v2
        with:
          start: npm run http-server
      - uses: actions/upload-artifact@v2
        with:
          name: e2e-videos
          path: cypress/videos

  docker:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: registry.cloudscale-lpg-2.appuio.cloud
          username: ${{ github.repository_owner }}
          password: ${{ secrets.OPENSHIFT_TOKEN_PREVIEW }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'dependency') }}
    uses: ./.github/workflows/setup_deploy.yaml@${{ github.ref }}
    with:
      namespace: ${{ env.NAMESPACE }}
      openshift_api_url: ${{ env.OPENSHIFT_API }}
    secrets:
      openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
    needs:
      - docker
